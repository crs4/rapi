#!/usr/bin/env python

from glob import glob
import os
import sys

from setuptools import setup, Extension

from distutils.command.build import build
from distutils.command.build_ext import build_ext
from setuptools.command.install import install
from distutils.command.clean import clean
from distutils import log

def find_swig():
    for path in os.environ['PATH'].split(os.pathsep):
        swigs = glob(os.path.join(path, 'swig*'))
        if swigs:
            return swigs[0]
    return None

class CustomBuildExt(build_ext):
    """
    Custom build_ext used merely to inject code to find the swig executable.
    """
    def finalize_options(self):
        build_ext.finalize_options(self)
        log.info("Running CustomBuildExt.finalize_options")
        if not self.swig:
            self.swig = find_swig()
            log.info("Using swig found at %s", self.swig)


class CustomBuild(build):
    """
    Build project reordering steps:  run build_ext before build_py.

    This is necessary because pyrapi/rapi.py is generated by swig,
    which is run by build_ext.

    Fix courtesy of `Matt Swain <http://stackoverflow.com/questions/12491328/python-distutils-not-include-the-swig-generated-module>`_.
    """
    def run(self):
        log.info("Running CustomBuild")
        self.run_command('build_ext')
        build.run(self)


class CustomInstall(install):
    def run(self):
        log.info("Running CustomInstall")
        self.run_command('build_ext')
        self.do_egg_install()

class CustomClean(clean):
    def run(self):
        log.info("Running CustomClean")
        my_dir = os.path.dirname(__file__)
        for pattern in ('rapi.py', 'rapi_wrap.*', '_rapi.so'):
            for f in glob(os.path.join(my_dir, 'pyrapi', pattern)):
                log.info("Removing %s", f)
                os.remove(f)
        clean.run(self)



bwa_rapi_extension = Extension(
    'pyrapi._rapi', ['pyrapi/rapi.i'],
    swig_opts=['-builtin', '-I../include'],
    include_dirs=['../include'],
    library_dirs=['../rapi_bwa'],
    libraries=['rapi_bwa', 'z'],
    extra_compile_args=['-std=c99'])


setup(
    cmdclass={
        'build': CustomBuild,
        'build_ext': CustomBuildExt,
        'install': CustomInstall,
        'clean':  CustomClean,
    },
    name="pyrapi",
    version='0.0.1',
    description="Python bindings for RAPI",
    author="Luca Pireddu",
    author_email="pireddu@crs4.it",
    url="https://github.com/ilveroluca/rapi",
    packages=['pyrapi'],
    ext_modules=[
        bwa_rapi_extension
    ],
    py_modules=[
        'pyrapi.rapi'
    ],
    classifiers=[
        "Programming Language :: Python",
        "Operating System :: POSIX :: Linux",
    ],
)
